# Generated by Django 2.0.5 on 2018-05-10 12:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cigeo', '0001_initial'),
        ('contacts', '0001_initial'),
        ('realties', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('contactperson_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contacts.ContactPerson')),
            ],
            bases=('contacts.contactperson',),
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('purpose', models.CharField(choices=[('industry', 'Průmysl'), ('storage', 'Sklady'), ('office', 'Kanceláře')], help_text='Určení dle ÚP', max_length=10)),
                ('purpose_note', models.TextField(blank=True, help_text='Poznámka k účelu', null=True)),
                ('slope', models.IntegerField(choices=[(0, 'Rovina'), (10, 'Mírně svažitý'), (45, 'Svah')], help_text='Sklon pozemku')),
                ('ground_water', models.IntegerField(blank=True, help_text='Hladina spodní vody <code>m</code>', null=True)),
                ('ecology', models.IntegerField(choices=[(0, 'Ne'), (1, 'Ano'), (2, 'Lze předpokládat'), (3, 'Neznámé')], help_text='Ekologická zátěž')),
                ('terrain_note', models.TextField(blank=True, help_text='Poznámka k terénu', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AreaArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField(help_text='Celková rozloha <code>m<sup>2</sup></code>')),
                ('free', models.IntegerField(help_text='Volná plocha <code>m<sup>2</sup></code>')),
                ('to_be_build', models.IntegerField(help_text='K zástavbě <code>m<sup>2</sup></code>')),
                ('for_expansion', models.IntegerField(help_text='K expanzi <code>m<sup>2</sup></code>')),
                ('available_from', models.DateField(help_text='K dispozici od')),
            ],
        ),
        migrations.CreateModel(
            name='AreaPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(choices=[('kc', 'Kč'), ('eur', 'Eur')], help_text='Měna', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('building_type', models.CharField(choices=[('prod', 'Výrobní'), ('admin', 'Administrativní'), ('store', 'Skladová'), ('multi', 'Multifunkční')], help_text='Typ budovy', max_length=5)),
                ('last_inspection', models.DateField(help_text='Datum poslední kolaudace')),
                ('date_available', models.DateField(help_text='K dispozici od')),
                ('technical_state', models.CharField(choices=[('planed', 'Plánovaný projekt'), ('new', 'Novostavba'), ('recons', 'Rekonstruovaná'), ('good', 'Zachovalá'), ('need_rec', 'Nutná rekonstrukce'), ('demol', 'K demolici')], help_text='Technický stav budovy', max_length=10)),
                ('last_usage', models.TextField(help_text='Poslední využití')),
                ('other_restrictions', models.TextField(help_text='Jiná omezení využití')),
                ('security', models.BooleanField(help_text='Bezpečnostní systém')),
                ('fire_protection', models.BooleanField(help_text='Protipožární ochrana')),
                ('heating', models.BooleanField(help_text='Vytápění')),
                ('air_condition', models.BooleanField(help_text='Klimatizace')),
                ('crane', models.BooleanField(help_text='Jeřáb')),
                ('reception_desk', models.BooleanField(help_text='Recepce')),
                ('parking_garage', models.IntegerField(blank=True, help_text='Parkovací místa v garáži', null=True)),
                ('parking_openair', models.IntegerField(blank=True, help_text='Parkovací místa volně', null=True)),
                ('personal_lift_number', models.IntegerField(blank=True, help_text='Počet osobních výtahů', null=True)),
                ('personal_lift_capacity', models.IntegerField(blank=True, help_text='Kapacita osobních výtahů <code>[kg]</code>', null=True)),
                ('load_lift_number', models.IntegerField(blank=True, help_text='Počet nákladních výtahů', null=True)),
                ('load_lift_capacity', models.IntegerField(blank=True, help_text='Kapacita nákladních výtahů <code>[kg]</code>', null=True)),
                ('menza_capacity', models.IntegerField(default=0, help_text='Kapacita jídelny')),
                ('notes', models.TextField(blank=True, help_text='Poznámky', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BuildingArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production', models.IntegerField(default=0, help_text='Plocha pro výrobu <code>m<sup>2</sup></code>')),
                ('offices', models.IntegerField(default=0, help_text='Plocha pro kanceláře <code>m<sup>2</sup></code>')),
                ('storage', models.IntegerField(default=0, help_text='Plocha pro sklady <code>m<sup>2</sup></code>')),
                ('other', models.IntegerField(default=0, help_text='Plocha pro jiné užití <code>m<sup>2</sup></code>')),
            ],
        ),
        migrations.CreateModel(
            name='BuildingDisposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floors', models.IntegerField(blank=True, help_text='Počet podlaží', null=True)),
                ('building_type', models.CharField(blank=True, choices=[('wall', 'Příčky'), ('os', 'Open space')], help_text='Typ dispozice', max_length=5, null=True)),
                ('pole_distance', models.FloatField(blank=True, help_text='Rozestup sloupů <code>[m]</code>', null=True)),
                ('loading_capacity', models.FloatField(blank=True, help_text='Nosnost <code>[kg/m<sup>2</sup>]</code>', null=True)),
                ('width', models.FloatField(blank=True, help_text='Šířka <code>[m]</code>', null=True)),
                ('height', models.FloatField(blank=True, help_text='Světlá výška <code>[m]</code>', null=True)),
                ('length', models.FloatField(blank=True, help_text='Délka <code>[m]</code>', null=True)),
                ('input_height', models.FloatField(blank=True, help_text='Výška vstupu <code>[m]</code>', null=True)),
                ('span_width', models.FloatField(blank=True, help_text='Rozpětí nosné konstrukce <code>[m]</code>', null=True)),
                ('construction_material', models.CharField(blank=True, choices=[('concrete', 'Beton'), ('brick', 'Cihla'), ('steel', 'Ocel'), ('other', 'Jiná')], help_text='Konstruční materiál', max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BuildingPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('services_minium', models.IntegerField(help_text='Cena za služby minimální')),
                ('services_maxium', models.IntegerField(help_text='Cena za služby maximální')),
                ('note', models.TextField(blank=True, help_text='Poznámka', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor_number', models.IntegerField(help_text='Číslo podlaží')),
                ('number_of_units', models.IntegerField(blank=True, help_text='Počet jednotek', null=True)),
                ('total_area', models.IntegerField(blank=True, help_text='Celková plocha <code>m<sup>2</sup></code>', null=True)),
                ('smallest_unit', models.IntegerField(blank=True, help_text='Velikost nejmenší jednotky <code>m<sup>2</sup></code>', null=True)),
                ('biggest_unit', models.IntegerField(blank=True, help_text='Velikost nevětší jednotky <code>m<sup>2</sup></code>', null=True)),
                ('price', models.OneToOneField(help_text='Cena', on_delete=django.db.models.deletion.CASCADE, to='realties.BuildingPrice')),
            ],
        ),
        migrations.CreateModel(
            name='Medium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.IntegerField(help_text='vzdálenost k objektu <code>[m]</code>')),
                ('comment', models.TextField(help_text='Komentář')),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('contactperson_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contacts.ContactPerson')),
            ],
            bases=('contacts.contactperson',),
        ),
        migrations.CreateModel(
            name='Ownership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ownership', models.CharField(choices=[('priv', 'Soukromé'), ('pub', 'Veřejné')], default='priv', max_length=4)),
                ('note', models.TextField(blank=True, help_text='Poznámka k vlastnictví', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_minimum', models.IntegerField(help_text='Celková minimální')),
                ('total_maximum', models.IntegerField(help_text='Celková maximální')),
                ('per_sqm_minium', models.IntegerField(help_text='Za <code>m<sup>2</sup></code> minimální')),
                ('per_sqm_maxium', models.IntegerField(help_text='Za <code>m<sup>2</sup></code> maximální')),
                ('note', models.TextField(blank=True, help_text='Poznámka', null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='realestate',
            name='location',
        ),
        migrations.AlterField(
            model_name='realestate',
            name='area',
            field=models.ForeignKey(help_text='Plocha', on_delete=django.db.models.deletion.CASCADE, to='realties.Area'),
        ),
        migrations.CreateModel(
            name='Electricity',
            fields=[
                ('medium_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='realties.Medium')),
                ('current', models.IntegerField(help_text='Napětí <code>[kV]</code>')),
                ('capacity', models.IntegerField(help_text='Kapacita <code>[kW]</code>')),
            ],
            bases=('realties.medium',),
        ),
        migrations.CreateModel(
            name='Gas',
            fields=[
                ('medium_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='realties.Medium')),
                ('pressure', models.IntegerField(help_text='Tlak <code>[kPa]</code>')),
                ('capacity', models.IntegerField(help_text='Kapacita přípojky <code>[m<sup>3</sup>/d]</code>')),
            ],
            bases=('realties.medium',),
        ),
        migrations.CreateModel(
            name='Telecommunications',
            fields=[
                ('medium_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='realties.Medium')),
            ],
            bases=('realties.medium',),
        ),
        migrations.CreateModel(
            name='WasteWater',
            fields=[
                ('medium_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='realties.Medium')),
                ('diameter', models.IntegerField(help_text='Velikost přípojky <code>[mm]</code>')),
                ('capacity', models.IntegerField(help_text='Kapacita přípojky <code>[m<sup>3</sup>/d]</code>')),
            ],
            bases=('realties.medium',),
        ),
        migrations.CreateModel(
            name='Water',
            fields=[
                ('medium_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='realties.Medium')),
                ('diameter', models.IntegerField(help_text='Velikost přípojky <code>[mm]</code>')),
                ('well', models.IntegerField(help_text='Studna <code>[m<sup>3</sup>]</code>')),
                ('capacity', models.IntegerField(help_text='Kapacita přípojky <code>[m<sup>3</sup>/d]</code>')),
                ('well_capacity', models.IntegerField(help_text='Kapacita studny <code>[m<sup>3</sup>/d]</code>')),
            ],
            bases=('realties.medium',),
        ),
        migrations.AddField(
            model_name='building',
            name='disposal',
            field=models.OneToOneField(help_text='Dispozice', on_delete=django.db.models.deletion.CASCADE, related_name='disposal_area', to='realties.BuildingDisposal'),
        ),
        migrations.AddField(
            model_name='building',
            name='floors',
            field=models.ForeignKey(help_text='Patra', on_delete=django.db.models.deletion.CASCADE, to='realties.Floor'),
        ),
        migrations.AddField(
            model_name='building',
            name='free_area',
            field=models.OneToOneField(help_text='Volná plocha', on_delete=django.db.models.deletion.CASCADE, related_name='free_area', to='realties.BuildingArea'),
        ),
        migrations.AddField(
            model_name='building',
            name='ownership',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='realties.Ownership'),
        ),
        migrations.AddField(
            model_name='building',
            name='price',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='realties.BuildingPrice'),
        ),
        migrations.AddField(
            model_name='building',
            name='total_area',
            field=models.OneToOneField(help_text='Celková plocha', on_delete=django.db.models.deletion.CASCADE, related_name='total_area', to='realties.BuildingArea'),
        ),
        migrations.AddField(
            model_name='building',
            name='used_area',
            field=models.OneToOneField(help_text='Využitá plocha', on_delete=django.db.models.deletion.CASCADE, related_name='used_area', to='realties.BuildingArea'),
        ),
        migrations.AddField(
            model_name='areaprice',
            name='rental_price',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rental', to='realties.Price'),
        ),
        migrations.AddField(
            model_name='areaprice',
            name='selling_price',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='selling', to='realties.Price'),
        ),
        migrations.AddField(
            model_name='area',
            name='area',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='realties.AreaArea'),
        ),
        migrations.AddField(
            model_name='area',
            name='buildings',
            field=models.ManyToManyField(help_text='Budovy na pozemku', to='realties.Building'),
        ),
        migrations.AddField(
            model_name='area',
            name='location',
            field=models.OneToOneField(blank=True, help_text='Umístění', null=True, on_delete=django.db.models.deletion.CASCADE, to='cigeo.Location'),
        ),
        migrations.AddField(
            model_name='area',
            name='ownership',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='realties.Ownership'),
        ),
        migrations.AddField(
            model_name='area',
            name='price',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='realties.AreaPrice'),
        ),
        migrations.CreateModel(
            name='DrinkingWater',
            fields=[
                ('water_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='realties.Water')),
            ],
            bases=('realties.water',),
        ),
        migrations.CreateModel(
            name='NonPotableWater',
            fields=[
                ('water_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='realties.Water')),
            ],
            bases=('realties.water',),
        ),
        migrations.AddField(
            model_name='realestate',
            name='electricity',
            field=models.OneToOneField(blank=True, help_text='Elektřina', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realties.Electricity'),
        ),
        migrations.AddField(
            model_name='realestate',
            name='gas',
            field=models.OneToOneField(blank=True, help_text='Plyn', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realties.Gas'),
        ),
        migrations.AddField(
            model_name='realestate',
            name='telecommunications',
            field=models.OneToOneField(blank=True, help_text='Telekomunikace', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realties.Telecommunications'),
        ),
        migrations.AddField(
            model_name='realestate',
            name='waste_water',
            field=models.OneToOneField(blank=True, help_text='Odpadní voda', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realties.WasteWater'),
        ),
        migrations.AddField(
            model_name='realestate',
            name='drinking_water',
            field=models.OneToOneField(blank=True, help_text='Pitná voda', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realties.DrinkingWater'),
        ),
        migrations.AddField(
            model_name='realestate',
            name='nonpotablewater',
            field=models.OneToOneField(blank=True, help_text='Užitková voda', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realties.NonPotableWater'),
        ),
    ]
