# Generated by Django 2.0.5 on 2018-05-21 15:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('addresses', '0001_initial'),
        ('contacts', '0002_auto_20180515_1143'),
    ]

    operations = [
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Industry name', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Infrastructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='NÃ¡zev', max_length=200)),
                ('logo', models.ImageField(blank=True, help_text='Logo', null=True, upload_to='uploads/infrastrucutre/logos')),
                ('description_cz', models.TextField(help_text='Popis [cz]')),
                ('description_en', models.TextField(blank=True, help_text='Popis [en]')),
                ('year', models.IntegerField(blank=True, help_text='Foundation year', null=True)),
                ('url', models.URLField()),
                ('twitter', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('mentors', models.IntegerField(blank=True, help_text='Number of mentors', null=True)),
                ('seats', models.IntegerField(blank=True, help_text='Maximum number of seets', null=True)),
                ('in_incubation', models.IntegerField(blank=True, help_text='Number of companies in incubation', null=True)),
                ('conditions', models.TextField(blank=True, help_text='Conditions for SUP (industry, stage etc.)', null=True)),
                ('price', models.IntegerField(blank=True, help_text='Seet/Month', null=True)),
                ('note', models.TextField(blank=True, help_text='Just some note', null=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='addresses.Address')),
                ('contact_person', models.ManyToManyField(blank=True, to='contacts.ContactPerson')),
            ],
        ),
        migrations.CreateModel(
            name='InfType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('inc', 'Incubator'), ('vtp', 'VTP'), ('coow', 'Co-working'), ('acc', 'Accelerator')], help_text='Typ', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Organisation name', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Services provided', max_length=20)),
            ],
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='cooperation',
            field=models.ManyToManyField(blank=True, to='infrastructure.Organisation'),
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='industry',
            field=models.ManyToManyField(to='infrastructure.Industry'),
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='inf_type',
            field=models.ManyToManyField(to='infrastructure.InfType'),
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='services',
            field=models.ManyToManyField(to='infrastructure.Service'),
        ),
    ]
